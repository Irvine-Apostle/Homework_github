JSON
 4. Создать внешний репозиторий c названием JSON. ======= curl -u USER:TOKEN https://api.github.com/user/repos -d '{"name":"REPO"}' 
 Где USER - Логин\имя пользователя на гитхабе. TOKEN - подобного рода: sdgg757dfg6576sdf5756dsf, необходимо сгенерировать на гитхабе. REPO - задаете имя репозиторию.
 5. Клонировать репозиторий JSON на локальный компьютер. ======= git clone https://github.com/Irvine-Apostle/JSON_Repo.git
 6. Внутри локального JSON создать файл “new.json”. ======= -touch new.json
 7. Добавить файл под гит. ======= git add new.json
 8. Закоммитить файл. ======= git commit -m "add new.json file"
 9. Отправить файл на внешний GitHub репозиторий. ======= git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
редактируем с помощью команды vim new.json 

{
	"Last name":"Hazhiev",
	"Name":"Danil" ,
	"Patrynomic":"Rafailovich",
	"Age":"23",
	"Domestic Animal":0,
	"Salary":55555
}

 11. Отправить изменения на внешний репозиторий. ======= повторяем git add > git commit > git push
 12. Создать файл preferences.json ======= touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 редактируем с помощью команды vim preferences.json 

{
	"Favorite film":"Blade runner",
	"Favorite show":"Mindhunter",
	"Favorite food":"buckwheat",
	"Favorite season":"Fall",
	"Country to travel":"Canada"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON ======= touch skills.json
редактируем с помощью команды vim touch skills.json

{
	"Skills":[
			"software testing theory",
			"client-server model",
			"HTTP",
			"JSON XML",
			"API",
			"SQL",
			"Python"
		]
}

 15. Отправить сразу 2 файла на внешний репозиторий. ======= git add preferences.json skills.json или git add . для всех файлов, затем git commit -m "commentary" , git push
 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

{
	"Bag ID":{
		"ID number":432,
		"Name":"Cart - Unable to add new item to my cart",
		"Reporter":"Danil Hazhiev"
		"Date":"11/01/2022",
		},
	"Bug overview":{
			"Summary":"When my cart contains one item, i am unable to second item by add to card button"
			"URL":"www.Amazon.com"
			"screenshot":"www.image.com/randomscreenshot"
			}
	"Environment":{
			"Platform":"Random pesonal computer"
			"OS":"Windows"
			"Browser":"YandexBrowser" 
			}
	"Bug Details":{
			"Steps to reproduce":"add one item to cart > choose product > try to add item by pressing add to card button > check cart"
			"Expected result":"The caty should contain 2 items"
			"Actual Result":"The cart contain onlu 1 item"
			}
	"Bug Tracking":{
			"Severity":"Major"
			"Priority":"High"
			}
}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON ======= git pull

========================================================================================================================================================

XML
 21. Создать внешний репозиторий c названием XML. ======= curl -u USER:TOKEN https://api.github.com/user/repos -d '{"name":"REPO"}' 
Где USER - Логин\имя пользователя на гитхабе. TOKEN - подобного рода: sdgg757dfg6576sdf5756dsf, необходимо сгенерировать на гитхабе. REPO - задаете имя репозиторию.
 22. Клонировать репозиторий XML на локальный компьютер. git clone https://github.com/Irvine-Apostle/XML_Repo.git
 23. Внутри локального XML создать файл “new.xml”. ======= touch new.xml
 24. Добавить файл под гит. ======= git add new.xml
 25. Закоммитить файл. ======= git commit "add new.xml file"
 26. Отправить файл на внешний GitHub репозиторий. ======= git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 <aboutme>	
	<last name> Hazhiev </last name>
	<name> Danil </name>
	<patrynomic> Rafailovich </patrynomic>
	<age> 23 </age>
	<dometic animal> 0 </dometic animal>
	<salary> 55555 </salary>
</aboutme>
 28. Отправить изменения на внешний репозиторий. ======= git add > git commit > git push
 29. Создать файл preferences.xml ======= touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.

<MyFavorites>
	<Favorite film> Blade runner </Favorite film>
 	<Favorite show> Mindhunter </Favorite show>
	<Favorite food> buckwheat </Favorite food>
	<Favorite season> Fall </Favorite season>
	<Country to travel> Canada </Country to travel>
</MyFavorites>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
cat > skills.xml затем добавляем необходимую информацию, сохраняем
<Cources skills>
		<skills>software testing theory,
			client-server model,
			HTTP,
			JSON XML,
			API,
			SQL,
			Python
		</skills>			
</Cources skills>
 
 32. Сделать коммит в одну строку.
 33. Отправить сразу 2 файла на внешний репозиторий.
 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML